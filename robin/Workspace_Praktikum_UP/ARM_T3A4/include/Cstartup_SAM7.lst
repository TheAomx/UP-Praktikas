   1              		.file	"Cstartup_SAM7.c"
   9              	.Ltext0:
  10              		.align	2
  11              		.global	AT91F_LowLevelInit
  13              	AT91F_LowLevelInit:
  14              	.LFB2:
  15              		.file 1 "include/Cstartup_SAM7.c"
   1:include/Cstartup_SAM7.c **** //*----------------------------------------------------------------------------
   2:include/Cstartup_SAM7.c **** //*         ATMEL Microcontroller Software Support  -  ROUSSET  -
   3:include/Cstartup_SAM7.c **** //*----------------------------------------------------------------------------
   4:include/Cstartup_SAM7.c **** //* The software is delivered "AS IS" without warranty or condition of any
   5:include/Cstartup_SAM7.c **** //* kind, either express, implied or statutory. This includes without
   6:include/Cstartup_SAM7.c **** //* limitation any warranty or condition with respect to merchantability or
   7:include/Cstartup_SAM7.c **** //* fitness for any particular purpose, or against the infringements of
   8:include/Cstartup_SAM7.c **** //* intellectual property rights of others.
   9:include/Cstartup_SAM7.c **** //*----------------------------------------------------------------------------
  10:include/Cstartup_SAM7.c **** //* File Name           : Cstartup_SAM7.c
  11:include/Cstartup_SAM7.c **** //* Object              : Low level initializations written in C for GCC Tools
  12:include/Cstartup_SAM7.c **** //* Creation            : 12/Jun/04
  13:include/Cstartup_SAM7.c **** //* 1.2   28/Feb/05 JPP : LIB change AT91C_WDTC_WDDIS & PLL
  14:include/Cstartup_SAM7.c **** //* 1.3   21/Mar/05 JPP : Change PLL Wait time
  15:include/Cstartup_SAM7.c **** //*----------------------------------------------------------------------------
  16:include/Cstartup_SAM7.c **** 
  17:include/Cstartup_SAM7.c **** // Include the AT91SAM7S64 file description
  18:include/Cstartup_SAM7.c **** #include "AT91SAM7S64.h"
  19:include/Cstartup_SAM7.c **** 
  20:include/Cstartup_SAM7.c **** // The following functions must be write in ARM mode this function called directly
  21:include/Cstartup_SAM7.c **** // by exception vector
  22:include/Cstartup_SAM7.c **** extern void AT91F_Spurious_handler(void);
  23:include/Cstartup_SAM7.c **** extern void AT91F_Default_IRQ_handler(void);
  24:include/Cstartup_SAM7.c **** extern void AT91F_Default_FIQ_handler(void);
  25:include/Cstartup_SAM7.c **** 
  26:include/Cstartup_SAM7.c **** //*----------------------------------------------------------------------------
  27:include/Cstartup_SAM7.c **** //* \fn    AT91F_LowLevelInit
  28:include/Cstartup_SAM7.c **** //* \brief This function performs very low level HW initialization
  29:include/Cstartup_SAM7.c **** //*        this function can be use a Stack, depending the compilation
  30:include/Cstartup_SAM7.c **** //*        optimization mode
  31:include/Cstartup_SAM7.c **** //*----------------------------------------------------------------------------
  32:include/Cstartup_SAM7.c **** void AT91F_LowLevelInit( void)
  33:include/Cstartup_SAM7.c **** {  int i;
  16              	 args = 0, pretend = 0, frame = 4
  17              		@ frame_needed = 1, uses_anonymous_args = 0
  18              		mov	ip, sp
  19 0000 0DC0A0E1 	.LCFI0:
  20              		stmfd	sp!, {fp, ip, lr, pc}
  21 0004 00D82DE9 	.LCFI1:
  22              		sub	fp, ip, #4
  23 0008 04B04CE2 	.LCFI2:
  24              		sub	sp, sp, #4
  25 000c 04D04DE2 	.LCFI3:
  26              		.loc 1 35 0
  34:include/Cstartup_SAM7.c **** F_LowLevelInit( void)
  35:include/Cstartup_SAM7.c **** {  int i;
  27              	1476395008
  28 0010 2A33A0E3 		mov	r3, r3, asr #21
  29 0014 C33AA0E1 		mov	r2, #32768
  30 0018 0229A0E3 		str	r2, [r3, #4]
  31 001c 042083E5 		.loc 1 38 0
  36:include/Cstartup_SAM7.c **** F_LowLevelInit( void)
  37:include/Cstartup_SAM7.c **** {  int i;
  38:include/Cstartup_SAM7.c ****   // Disable Watchdog
  32              	r2, #-2147483648
  33 0020 0221A0E3 		mov	r2, r2, asr #21
  34 0024 C22AA0E1 		mov	r3, #4096
  35 0028 013AA0E3 		add	r3, r3, #1
  36 002c 013083E2 		str	r3, [r2, #32]
  37 0030 203082E5 	.L2:
  38              		.loc 1 40 0
  39:include/Cstartup_SAM7.c ****   int i;
  40:include/Cstartup_SAM7.c ****   // Disable Watchdog
  39              	, #-2147483648
  40 0034 0231A0E3 		mov	r3, r3, asr #21
  41 0038 C33AA0E1 		ldr	r3, [r3, #104]
  42 003c 683093E5 		and	r3, r3, #1
  43 0040 013003E2 		cmp	r3, #0
  44 0044 000053E3 		beq	.L2
  45 0048 F9FFFF0A 		.loc 1 42 0
  41:include/Cstartup_SAM7.c ****   int i;
  42:include/Cstartup_SAM7.c ****   // Disable Watchdog
  46              	, #-2147483648
  47 004c 0231A0E3 		mov	r3, r3, asr #21
  48 0050 C33AA0E1 		mov	r2, #9
  49 0054 0920A0E3 		str	r2, [r3, #48]
  50 0058 302083E5 	.L3:
  51              		.loc 1 44 0
  43:include/Cstartup_SAM7.c ****   int i;
  44:include/Cstartup_SAM7.c ****   // Disable Watchdog
  52              	3, #-2147483648
  53 005c 0231A0E3 		mov	r3, r3, asr #21
  54 0060 C33AA0E1 		ldr	r3, [r3, #104]
  55 0064 683093E5 		and	r3, r3, #8
  56 0068 083003E2 		cmp	r3, #0
  57 006c 000053E3 		beq	.L3
  58 0070 F9FFFF0A 		.loc 1 46 0
  45:include/Cstartup_SAM7.c ****   int i;
  46:include/Cstartup_SAM7.c ****   // Disable Watchdog
  59              	, #-2147483648
  60 0074 0221A0E3 		mov	r2, r2, asr #21
  61 0078 C22AA0E1 		mov	r3, #4145152
  62 007c FD39A0E3 		sub	r3, r3, #1016
  63 0080 FE3F43E2 		str	r3, [r2, #44]
  64 0084 2C3082E5 	.L4:
  65              		.loc 1 50 0
  47:include/Cstartup_SAM7.c ****   int i;
  48:include/Cstartup_SAM7.c ****   // Disable Watchdog
  49:include/Cstartup_SAM7.c ****   AT91C_BASE_WDTC->WDTC_WDMR= AT91C_WDTC_WDDIS;
  50:include/Cstartup_SAM7.c ****   // Set MCK at 24 MHz
  66              	, #-2147483648
  67 0088 0231A0E3 		mov	r3, r3, asr #21
  68 008c C33AA0E1 		ldr	r3, [r3, #104]
  69 0090 683093E5 		and	r3, r3, #4
  70 0094 043003E2 		cmp	r3, #0
  71 0098 000053E3 		beq	.L4
  72 009c F9FFFF0A 		.loc 1 52 0
  51:include/Cstartup_SAM7.c **** DDIS;
  52:include/Cstartup_SAM7.c ****   // Set MCK at 24 MHz
  73              	, #-2147483648
  74 00a0 0231A0E3 		mov	r3, r3, asr #21
  75 00a4 C33AA0E1 		mov	r2, #11
  76 00a8 0B20A0E3 		str	r2, [r3, #48]
  77 00ac 302083E5 	.L5:
  78              		.loc 1 54 0
  53:include/Cstartup_SAM7.c **** DDIS;
  54:include/Cstartup_SAM7.c ****   // Set MCK at 24 MHz
  79              	3, #-2147483648
  80 00b0 0231A0E3 		mov	r3, r3, asr #21
  81 00b4 C33AA0E1 		ldr	r3, [r3, #104]
  82 00b8 683093E5 		and	r3, r3, #8
  83 00bc 083003E2 		cmp	r3, #0
  84 00c0 000053E3 		beq	.L5
  85 00c4 F9FFFF0A 		.loc 1 57 0
  55:include/Cstartup_SAM7.c **** DDIS;
  56:include/Cstartup_SAM7.c ****   // Set MCK at 24 MHz
  57:include/Cstartup_SAM7.c ****   // Enabling the Main Oscillator:
  86              	, #255
  87 00c8 FF20E0E3 		mov	r3, #2359296
  88 00cc 0937A0E3 		str	r3, [r2, #96]
  89 00d0 603082E5 		.loc 1 59 0
  58:include/Cstartup_SAM7.c **** abling the Main Oscillator:
  59:include/Cstartup_SAM7.c ****   AT91C_BASE_PMC->PMC_MOR = ( (AT91C_CKGR_OSCOUNT) & (0x10 << 8)) | AT91C_CKGR_MOSCEN ;
  90              		r3, #-2147483648
  91 00d4 0231A0E3 		mov	r3, r3, asr #19
  92 00d8 C339A0E1 		ldr	r2, .L9
  93 00dc 50209FE5 		str	r2, [r3, #128]
  94 00e0 802083E5 		.loc 1 60 0
  60:include/Cstartup_SAM7.c ****  8)) | AT91C_CKGR_MOSCEN ;
  95              	r3, #1
  96 00e4 0130A0E3 		str	r3, [fp, #-16]
  97 00e8 10300BE5 		b	.L6
  98 00ec 080000EA 	.L7:
  99              		.loc 1 62 0
  61:include/Cstartup_SAM7.c ****  8)) | AT91C_CKGR_MOSCEN ;
  62:include/Cstartup_SAM7.c ****   // Wait the startup time
 100              	r2, #-2147483648
 101 00f0 0221A0E3 		mov	r2, r2, asr #19
 102 00f4 C229A0E1 		ldr	r3, [fp, #-16]
 103 00f8 10301BE5 		ldr	r1, .L9+4
 104 00fc 34109FE5 		add	r3, r3, #32
 105 0100 203083E2 		str	r1, [r2, r3, asl #2]
 106 0104 031182E7 		.loc 1 60 0
 107              		ldr	r3, [fp, #-16]
 108 0108 10301BE5 		add	r3, r3, #1
 109 010c 013083E2 		str	r3, [fp, #-16]
 110 0110 10300BE5 	.L6:
 111              		ldr	r3, [fp, #-16]
 112 0114 10301BE5 		cmp	r3, #30
 113 0118 1E0053E3 		ble	.L7
 114 011c F3FFFFDA 		.loc 1 64 0
  63:include/Cstartup_SAM7.c ****  // Wait the startup time
  64:include/Cstartup_SAM7.c ****   while(!(AT91C_BASE_PMC->PMC_SR & AT91C_PMC_MOSCS));
 115              	483648
 116 0120 0231A0E3 		mov	r3, r3, asr #19
 117 0124 C339A0E1 		ldr	r2, .L9+8
 118 0128 0C209FE5 		str	r2, [r3, #308]
 119 012c 342183E5 		.loc 1 65 0
  65:include/Cstartup_SAM7.c **** _SR & AT91C_PMC_MOSCS));
 120              	d	sp, {r3, fp, sp, pc}
 121 0130 08A89DE8 	.L10:
 122              		.align	2
 123              	.L9:
 124              		.word	AT91F_Default_FIQ_handler
 125 0134 00000000 		.word	AT91F_Default_IRQ_handler
 126 0138 00000000 		.word	AT91F_Spurious_handler
 127 013c 00000000 	.LFE2:
 129              		.section	.debug_frame,"",%progbits
 171              		.section	.debug_loc,"",%progbits
DEFINED SYMBOLS
                            *ABS*:00000000 Cstartup_SAM7.c
C:\Users\Robin\AppData\Local\Temp/ccVvXmnZ.s:13     .text:00000000 AT91F_LowLevelInit
C:\Users\Robin\AppData\Local\Temp/ccVvXmnZ.s:19     .text:00000000 $a
C:\Users\Robin\AppData\Local\Temp/ccVvXmnZ.s:125    .text:00000134 $d

UNDEFINED SYMBOLS
AT91F_Default_FIQ_handler
AT91F_Default_IRQ_handler
AT91F_Spurious_handler
